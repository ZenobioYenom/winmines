# -*- coding: utf-8 -*-
import os
import sys

# L√™ a vari√°vel BOT_ATIVO do Railway (ou usa "false" se n√£o existir)
BOT_ATIVO = os.getenv("BOT_ATIVO", "false").lower()

if BOT_ATIVO != "true":
    print("üö´ Bot est√° desativado pelo administrador. Encerrando...")
    sys.exit(0)

import telebot
from telebot import types
import json

# --- –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê / CONFIGURA√á√ïES DO BOT ---

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
# Insira aqui o token do seu bot, obtido do @BotFather
BOT_TOKEN = '8422634489:AAFNvWo5KfdrZ_GpnUNnmP-6x2U2r16EU-E'

# –£–∫–∞–∂–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
# Especifique os IDs dos administradores, separados por v√≠rgula
ADMIN_IDS = [7428791161, 1993108159]

# –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# Link para o seu mini-aplicativo
MINI_APP_URL = 'https://zenobioyenom.github.io/appmineswin/'

# –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
# Link para o suporte
SUPPORT_LINK = 'https://t.me/koalamoney3'

# –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# Nome do arquivo para armazenar os dados dos usu√°rios
DB_FILE = 'users_data.json'

# --- –¢–ï–ö–°–¢–´ –ë–û–¢–ê (–ú–ù–û–ì–û–Ø–ó–´–ß–ù–û–°–¢–¨) / TEXTOS DO BOT (MULTIL√çNGUE) ---
# –í—Å–µ —Ç–µ–∫—Å—Ç—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤
# Todos os textos s√£o armazenados em um dicion√°rio para facilitar a troca de idiomas
TEXTS = {
    'ru': {
        'choose_lang': "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose your language / Elige tu idioma:",
        'welcome': (
            "üëã –ü—Ä–∏–≤–µ—Ç!\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ü§ñ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–≤—è–∑–∞–Ω –Ω–∞–ø—Ä—è–º—É—é —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ 1win!\n\n"
            "üéØ **–ß—Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç?**\n"
            "–ù–∞—à –±–æ—Ç —É–º–µ–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä –µ—â—ë –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è —É —Ç–µ–±—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –≠—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª üîê\n\n"
            "üíª –ù–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º —Ç—Ä—É–¥–∏–ª–∏—Å—å –ª—É—á—à–∏–µ —Ä—É—Å—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã, –≤–ª–æ–∂–∏–≤ –≤ –Ω–µ–≥–æ –º–Ω–æ–≥–æ —Å–∏–ª –∏ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥:\n"
            "‚úÖ –ò–≥—Ä–∞—Ç—å\n"
            "‚úÖ –í—ã–∏–≥—Ä—ã–≤–∞—Ç—å\n"
            "‚úÖ –ò –¥–µ–ª–∞—Ç—å —ç—Ç–æ **–ë–ï–°–ü–õ–ê–¢–ù–û**\n\n"
            "üö´ –ù–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π\n"
            "üö´ –ù–∏–∫–∞–∫–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫\n"
            "üîì –ü—Ä–æ—Å—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, –∑–∞–ø—É—Å–∫–∞–π –±–æ—Ç–∞ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –≤—ã–∏–≥—Ä—ã—à–∞–º–∏ üí∞\n\n"
            "–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏, –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ ü§ù"
        ),
        'sync_button': "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º 1winüõ†",
        'instruction_1': (
            "üì¢ **–í–Ω–∏–º–∞–Ω–∏–µ! –í–∞–∂–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞** üîó\n\n"
            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —è –º–æ–≥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ç–µ–±—è üôå\n\n"
            "üßæ **–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?**\n\n"
            "1Ô∏è‚É£ **–°–æ–∑–¥–∞–π –ù–û–í–´–ô –∞–∫–∫–∞—É–Ω—Ç** –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ\n"
            "_(–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã–π, –∏–Ω–∞—á–µ –±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è!)_\n\n"
            "2Ô∏è‚É£ –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ **–æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π ID** (–ß–µ–º —Ä–∞–Ω—å—à–µ —Ç–µ–º –ª—É—á—à–µ)\n"
            "üì© –Ø –ø–æ–¥–∫–ª—é—á—É –µ–≥–æ –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É, —á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n\n"
            "3Ô∏è‚É£ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"
            "üîó –ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –≤—Ä—É—á–Ω—É—é:\n"
            "`https://1wuafz.life/?p=gv72`\n"
            "_(–µ—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤—å –µ—ë –≤ –ª—é–±–æ–π –±—Ä–∞—É–∑–µ—Ä)_\n\n"
            "4Ô∏è‚É£ –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏ –ø—Ä–æ–º–æ–∫–æ–¥:\n"
            "üéÅ `MOB500RR`\n"
            "–û–Ω –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –∏ –¥–∞—Å—Ç —Ç–µ–±–µ –±–æ–Ω—É—Å—ã üí∞\n\n"
            "‚ö†Ô∏è **–ë–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–≥–æ–≤ –±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ç–≤–æ–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É**\n"
            "–¢–∞–∫ —á—Ç–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–π –Ω–∏ –æ–¥–∏–Ω –ø—É–Ω–∫—Ç üõ†"
        ),
        'register_button_text': "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ üîó",
        'steps_done_button': "–í—Å–µ –ø—É–Ω–∫—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã üõ†",
        'instruction_2': (
            "üéâ –°—É–ø–µ—Ä! –ú—ã —É–∂–µ –Ω–∞ —Ñ–∏–Ω–∏—à–Ω–æ–π –ø—Ä—è–º–æ–π\n"
            "–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–∞–º —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å—ã! ‚è±Ô∏èü§ñ\n\n"
            "üìå **–°–µ–π—á–∞—Å –º–Ω–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–≤–æ–π ID** ‚Äî\n"
            "—ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø–æ–Ω–∏–º–∞–ª, –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ —Å–µ—Å—Å–∏–∏ –µ–º—É –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å. –ë–µ–∑ —ç—Ç–æ–≥–æ –æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ç–µ–±–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ üôà\n\n"
            "üß≠ **–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID:**\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª–µ (–∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏) –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –º–Ω–µ.\n"
            "–ú–æ–∂–µ—à—å:\n"
            "‚úÖ –ù–∞–ø–∏—Å–∞—Ç—å ID —Ç–µ–∫—Å—Ç–æ–º ‚Äî —ç—Ç–æ —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–±\n"
            "üì∏ –ò–ª–∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å ID ‚Äî —Ç–æ–∂–µ –ø–æ–¥–æ–π–¥—ë—Ç!\n\n"
            "–ñ–¥—É —Ç–µ–±—è! üíå"
        ),
        'send_id_button': "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π ID –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–≥–æ –∫ –±–æ—Ç—Éüõ†",
        'prompt_for_id': "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π ID –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç üëá",
        'id_received': (
            "–ü—Ä–∏–Ω—è—Ç–æ! üëç\n\n"
            "–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –≤—Ä—É—á–Ω—É—é, —Ç–∞–∫ –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Å–ª–æ–∂–Ω–∞—è –∏ –µ—ë –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –ø–æ–ª—É—á–∏–ª–∞ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–Ω–µ—Å–µ–Ω–∏–µ–º —Ç–µ–±—è –≤ —Å–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø–∞, –∏ –∫–∞–∫ —è –æ–±–µ—â–∞–ª, –≤—Å–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n\n"
            "–Ø –º–æ–≥—É –ø–æ–∑–≤–æ–ª–∏—Ç—å –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤–∞—Å —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç—Å—è, –∞ –≤ –±—É–¥—É—â–µ–º –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–ºüòâ\n\n"
            "–Ø –Ω–∞–ø–∏—à—É —Ç–µ–±–µ —Å—Ä–∞–∑—É, –∫–∞–∫ –≤—Å–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ!"
        ),
        'wrong_data_button': "–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ —Ç–µ –¥–∞–Ω–Ω—ã–µ ‚ö†Ô∏è",
        'change_data_prompt': "–Ø –∏–∑–º–µ–Ω—é –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞, –µ—Å–ª–∏ —Ç–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å –æ—à–∏–±–∫–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
        'data_changed': "–ò–∑–º–µ–Ω–∏–ª —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–æ–±—â–∏–ª –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º‚úçÔ∏è",
        'support_button': "–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É üë®‚Äçüíª",
        'access_granted': (
            "üéâ **–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!**\n"
            "–¢—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç —É–∑–Ω–∞–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª—é–±–æ–π —Ç–≤–æ–µ–π –∏–≥—Ä—ã –≤ Mines üí£ ‚Äî —Ç–µ–ø–µ—Ä—å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º! üß†üí∏\n\n"
            "üìå **–ù–µ–º–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª, —á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ —á—ë—Ç–∫–æ:**\n"
            "–ù–∞—à –±–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã, –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.\n"
            "‚ùóÔ∏è**–í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.**\n\n"
            "üîß **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**\n\n"
            "1Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏ –∏–≥—Ä—É, —Å–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–∂–∏–º–∞–π!\n"
            "2Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏ –≤ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É 'Analisar padr√£o' üîç\n"
            "3Ô∏è‚É£ –ü–æ–ª—É—á–∏ —Å–ø–∏—Å–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫ ‚úÖ\n"
            "4Ô∏è‚É£ –ü–æ–≤—Ç–æ—Ä—è–π —Ö–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±–æ—Ç, –∏ –≤—ã–≤–æ–¥–∏ –¥–µ–Ω—å–≥–∏! üí∞üéØ\n\n"
            "‚ö†Ô∏è **–í–∞–∂–Ω–æ:**\n"
            "–ù–µ —Ä–∏—Å–∫—É–π –ø–æ –Ω–∞–∏—Ç–∏—é. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω—É–∂–Ω–æ —Å —Ö–æ–ª–æ–¥–Ω–æ–π –≥–æ–ª–æ–≤–æ–π –∏ —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º –∫–ª–µ—Ç–æ—á–∫–∞–º üßäüß†"
        ),
        'open_app_button': "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üì≤",
        'access_denied': "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—ã–ª–∏ –≤—ã—è–≤–ª–µ–Ω—ã –ø—Ä–∏—á–∏–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.",
        'access_temp_denied': (
            "üö´ **–£–ø—Å! –î–æ—Å—Ç—É–ø –Ω–µ –≤—ã–¥–∞–Ω**\n"
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É –ø—Ä–æ—à–ª–æ —Å –æ—à–∏–±–∫–æ–π üòî\n\n"
            "üìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –Ω–∞—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, —á—Ç–æ–±—ã –≤—Å—ë –ø—Ä–æ—à–ª–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n"
            "–í–æ—Ç —á—Ç–æ –æ–Ω –ø–∏—à–µ—Ç:\n"
            "üìù _¬´{comment}¬ª_"
        ),
        # Admin texts
        'admin_panel_title': "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        'incoming_requests_button': "–í—Ö–æ–¥—è—â–∏–µ –∑–∞—è–≤–∫–∏",
        'stats_button': "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        'status_button': "–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞",
        'no_pending_requests': "–ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ—Ç.",
        'request_from_user': "–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID `{user_id}`.\n–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n`{user_data}`",
        'accept_button': "‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
        'reject_button': "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å",
        'reject_with_comment_button': "üìù –û—Ç–∫–∞–∑–∞—Ç—å —Å –∫–æ–º–º.",
        'prompt_for_rejection_comment': "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID `{user_id}`. –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –µ–º—É.",
        'request_accepted': "‚úÖ –î–æ—Å—Ç—É–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{user_id}` —Ä–∞–∑—Ä–µ—à–µ–Ω.",
        'request_rejected': "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{user_id}` –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.",
        'request_rejected_with_comment': "üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{user_id}` –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º.",
        'bot_status_ok': "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.",
        'stats_info': "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n\n- –ü—Ä–∏–Ω—è—Ç–æ –∑–∞—è–≤–æ–∫: `{accepted}`\n- –û—Ç–∫–ª–æ–Ω–µ–Ω–æ –∑–∞—è–≤–æ–∫: `{rejected}`\n- –û–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: `{pending}`",
    },
    'pt': {
        'choose_lang': "Escolha o seu idioma / Choose your language / Elige tu idioma:",
        'welcome': (
            "üëã Ol√°!\n"
            "Bem-vindo ao nosso ü§ñ bot exclusivo, que est√° diretamente conectado aos servidores da 1win!\n\n"
            "üéØ **O que ele faz?**\n"
            "Nosso bot consegue prever os resultados dos jogos antes mesmo que eles apare√ßam na sua tela. Isso √© poss√≠vel gra√ßas a uma tecnologia que intercepta o sinal do gerador de n√∫meros aleat√≥rios üîê\n\n"
            "üíª Os melhores programadores russos trabalharam neste projeto, investindo muito tempo e esfor√ßo para que voc√™ possa:\n"
            "‚úÖ Jogar\n"
            "‚úÖ Ganhar\n"
            "‚úÖ E fazer tudo isso **GRATUITAMENTE**\n\n"
            "üö´ Sem taxas ocultas\n"
            "üö´ Sem assinaturas\n"
            "üîì Basta se registrar, iniciar o bot e aproveitar os seus ganhos üí∞\n\n"
            "Se tiver alguma d√∫vida, √© s√≥ chamar. Nossa equipe est√° sempre online ü§ù"
        ),
        'sync_button': "Sincronizar o bot com a conta 1winüõ†",
        'instruction_1': (
            "üì¢ **Aten√ß√£o! Passos importantes para conectar o bot** üîó\n\n"
            "Para que eu possa rastrear suas sess√µes de jogo e o bot funcione corretamente, preciso de alguns dados seus üôå\n\n"
            "üßæ **O que voc√™ precisa fazer?**\n\n"
            "1Ô∏è‚É£ **Crie uma NOVA conta** no site oficial usando o link abaixo\n"
            "_(√© obrigat√≥rio que seja uma conta nova, caso contr√°rio, o bot n√£o conseguir√° se conectar!)_\n\n"
            "2Ô∏è‚É£ Em at√© 24 horas, **envie-me o seu ID** (quanto antes, melhor)\n"
            "üì© Eu o conectarei a um c√≥digo especial para que tudo funcione corretamente\n\n"
            "3Ô∏è‚É£ Use o bot√£o abaixo para se registrar\n"
            "üîó Ou copie o link manualmente:\n"
            "`https://1wuafz.life/?p=gv72`\n"
            "_(se n√£o abrir, basta col√°-lo em qualquer navegador)_\n\n"
            "4Ô∏è‚É£ Ao se registrar, insira o c√≥digo promocional:\n"
            "üéÅ `MOB500RR`\n"
            "Ele ativar√° a conex√£o com o bot e lhe dar√° b√¥nus üí∞\n\n"
            "‚ö†Ô∏è **Sem seguir todos os passos, o bot n√£o conseguir√° se conectar √† sua conta**\n"
            "Portanto, n√£o pule nenhuma etapa üõ†"
        ),
        'register_button_text': "Ir para o registro üîó",
        'steps_done_button': "Todos os passos foram conclu√≠dos üõ†",
        'instruction_2': (
            "üéâ √ìtimo! Estamos quase l√°\n"
            "Falta muito pouco para voc√™ ver com seus pr√≥prios olhos que o bot funciona como um rel√≥gio! ‚è±Ô∏èü§ñ\n\n"
            "üìå **Agora preciso do seu ID** ‚Äî\n"
            "isso √© necess√°rio para que o bot saiba quais sess√µes ele precisa verificar. Sem isso, ele –Ω–µ —Å–º–æ–∂–µ—Ç se conectar a voc√™ corretamente üôà\n\n"
            "üß≠ **Como encontrar o seu ID:**\n"
            "Basta clicar no bot√£o do seu perfil (como mostrado nas instru√ß√µes) e me enviar.\n"
            "Voc√™ pode:\n"
            "‚úÖ Escrever o ID em texto ‚Äî √© a forma mais r√°pida\n"
            "üì∏ Ou enviar uma captura de tela com o ID ‚Äî tamb√©m funciona!\n\n"
            "Estou aguardando! üíå"
        ),
        'send_id_button': "Enviar meu ID e conect√°-lo ao botüõ†",
        'prompt_for_id': "Envie seu ID ou uma foto diretamente neste chat üëá",
        'id_received': (
            "Recebido! üëç\n\n"
            "Todas as opera√ß√µes s√£o feitas manualmente, pois o sistema √© complexo e n√£o pode ser automatizado. Nossa equipe j√° recebeu todos os seus dados e est√° trabalhando para adicion√°-lo √†s listas de acesso. E, como prometido, tudo √© totalmente gratuito.\n\n"
            "Eu posso arcar com os custos necess√°rios por voc√™, e no futuro, voc√™ tamb√©m poder√° usar o dinheiro para ajudar outras pessoas üòâ\n\n"
            "Avisarei assim que tudo estiver pronto!"
        ),
        'wrong_data_button': "Eu enviei os dados errados ‚ö†Ô∏è",
        'change_data_prompt': "Vou alterar os dados da conta se foram enviados com erro. Por favor, envie os dados corretos.",
        'data_changed': "Seus dados foram alterados e a equipe foi notificada sobre as mudan√ßas‚úçÔ∏è",
        'support_button': "Contatar o suporte üë®‚Äçüíª",
        'access_granted': (
            "üéâ **Parab√©ns! Acesso concedido!**\n"
            "Voc√™ foi conectado com sucesso ao aplicativo que ajuda a descobrir os resultados de qualquer um dos seus jogos no Mines üí£ ‚Äî agora tudo est√° sob controle! üß†üí∏\n\n"
            "üìå **Algumas regras para que tudo funcione perfeitamente:**\n"
            "Nosso bot analisa apenas jogos reais que ocorrem no sistema oficial.\n"
            "‚ùóÔ∏è**O bot n√£o funciona no modo de demonstra√ß√£o.**\n\n"
            "üîß **Como usar o bot:**\n\n"
            "1Ô∏è‚É£ Inicie o jogo, fa√ßa uma aposta, mas –Ω–µ clique em nada!\n"
            "2Ô∏è‚É£ V√° para o mini-aplicativo do bot e pressione o bot√£o 'Analisar padr√£o' üîç\n"
            "3Ô∏è‚É£ Receba a lista de c√©lulas seguras ‚úÖ\n"
            "4Ô∏è‚É£ Repita os movimentos que o bot sugere e saque o dinheiro! üí∞üéØ\n\n"
            "‚ö†Ô∏è **Importante:**\n"
            "N√£o arrisque por intui√ß√£o. Ganhe dinheiro com a cabe√ßa fria e apenas nas c√©lulas verificadas üßäüß†"
        ),
        'open_app_button': "Abrir aplicativo üì≤",
        'access_denied': "Desculpe, mas ap√≥s a verifica√ß√£o, foram encontrados motivos pelos quais n√£o podemos conceder acesso ao bot.",
        'access_temp_denied': (
            "üö´ **Oops! Acesso n√£o concedido**\n"
            "Infelizmente, a conex√£o com o bot falhou üòî\n\n"
            "üìå Por favor, siga atentamente as recomenda√ß√µes do nosso funcion√°rio para que tudo corra bem.\n"
            "Aqui est√° o que ele diz:\n"
            "üìù _¬´{comment}¬ª_"
        ),
    },
    'es': {
        'choose_lang': "Elige tu idioma / Choose your language / Escolha o seu idioma:",
        'welcome': (
            "üëã ¬°Hola!\n"
            "¬°Bienvenido a nuestro ü§ñ bot √∫nico, que est√° conectado directamente con los servidores de 1win!\n\n"
            "üéØ **¬øQu√© hace?**\n"
            "Nuestro bot puede predecir los resultados de los juegos incluso antes de que aparezcan en tu pantalla. Esto es posible gracias a una tecnolog√≠a que intercepta la se√±al del generador de n√∫meros aleatorios üîê\n\n"
            "üíª Los mejores programadores rusos trabajaron en este proyecto, invirtiendo mucho tiempo y esfuerzo para que t√∫ pudieras:\n"
            "‚úÖ Jugar\n"
            "‚úÖ Ganar\n"
            "‚úÖ Y hacerlo **GRATIS**\n\n"
            "üö´ Sin pagos ocultos\n"
            "üö´ Sin suscripciones\n"
            "üîì Simplemente reg√≠strate, inicia el bot y disfruta de tus ganancias üí∞\n\n"
            "Si tienes alguna pregunta, solo escr√≠benos. El equipo siempre est√° en l√≠nea ü§ù"
        ),
        'sync_button': "Sincronizar el bot con la cuenta de 1winüõ†",
        'instruction_1': (
            "üì¢ **¬°Atenci√≥n! Pasos importantes para conectar el bot** üîó\n\n"
            "Para que pueda rastrear tus sesiones de juego y el bot funcione correctamente, necesito algunos datos tuyos üôå\n\n"
            "üßæ **¬øQu√© necesitas hacer?**\n\n"
            "1Ô∏è‚É£ **Crea una NUEVA cuenta** en el sitio web oficial usando el siguiente enlace\n"
            "_(¬°es obligatorio que sea nueva, de lo contrario el bot no podr√° conectarse!)_\n\n"
            "2Ô∏è‚É£ En un plazo de 24 horas, **env√≠ame tu ID** (cuanto antes, mejor)\n"
            "üì© Lo conectar√© a un c√≥digo especial para que todo funcione correctamente\n\n"
            "3Ô∏è‚É£ Aseg√∫rate de usar el bot√≥n de abajo para registrarte\n"
            "üîó O copia el enlace manualmente:\n"
            "`https://1wuafz.life/?p=gv72`\n"
            "_(si no se abre, simplemente p√©galo en cualquier navegador)_\n\n"
            "4Ô∏è‚É£ Al registrarte, introduce el c√≥digo promocional:\n"
            "üéÅ `MOB500RR`\n"
            "Activar√° la conexi√≥n con el bot y te dar√° bonos üí∞\n\n"
            "‚ö†Ô∏è **Sin completar todos los pasos, el bot no podr√° conectarse a tu cuenta**\n"
            "As√≠ que no te saltes ning√∫n punto üõ†"
        ),
        'register_button_text': "Ir al registro üîó",
        'steps_done_button': "Todos los pasos completados üõ†",
        'instruction_2': (
            "üéâ ¬°Genial! Ya estamos en la recta final\n"
            "¬°Falta muy poco para que puedas comprobar por ti mismo que el bot funciona como un reloj! ‚è±Ô∏èü§ñ\n\n"
            "üìå **Ahora necesito saber tu ID** ‚Äî\n"
            "es necesario para que el bot sepa qu√© sesiones debe verificar. Sin esto, no podr√° conectarse a ti correctamente üôà\n\n"
            "üß≠ **C√≥mo encontrar tu ID:**\n"
            "Simplemente haz clic en el bot√≥n de tu perfil (como se muestra en las instrucciones) y env√≠amelo.\n"
            "Puedes:\n"
            "‚úÖ Escribir el ID como texto ‚Äî es la forma m√°s r√°pida\n"
            "üì∏ O enviar una captura de pantalla con el ID ‚Äî ¬°tambi√©n funciona!\n\n"
            "¬°Te espero! üíå"
        ),
        'send_id_button': "Enviar mi ID y conectarlo al botüõ†",
        'prompt_for_id': "Env√≠a tu ID o una foto directamente a este chat üëá",
        'id_received': (
            "¬°Recibido! üëç\n\n"
            "Todas las operaciones se realizan manualmente, ya que el sistema es complejo y no se puede automatizar. Nuestro equipo ya ha recibido todos tus datos y est√° trabajando para a√±adirte a las listas de acceso. Y, como promet√≠, todo es completamente gratis.\n\n"
            "Puedo permitirme pagar la cantidad requerida por ti, y en el futuro, t√∫ tambi√©n podr√°s usar el dinero para ayudar a otros üòâ\n\n"
            "¬°Te escribir√© tan pronto como todo est√© listo!"
        ),
        'wrong_data_button': "Envi√© los datos incorrectos ‚ö†Ô∏è",
        'change_data_prompt': "Cambiar√© los datos de la cuenta si se enviaron por error. Por favor, env√≠a los datos correctos.",
        'data_changed': "Tus datos han sido cambiados y he notificado al personal sobre los cambios‚úçÔ∏è",
        'support_button': "Contactar con soporte üë®‚Äçüíª",
        'access_granted': (
            "üéâ **¬°Felicidades! ¬°Acceso concedido!**\n"
            "Has sido conectado exitosamente a la aplicaci√≥n que ayuda a conocer los resultados de cualquiera de tus juegos en Mines üí£ ‚Äî ¬°ahora todo est√° bajo control! üß†üí∏\n\n"
            "üìå **Algunas reglas para que todo funcione perfectamente:**\n"
            "Nuestro bot solo analiza juegos reales que ocurren en el sistema oficial.\n"
            "‚ùóÔ∏è**El bot no funciona en modo de demostraci√≥n.**\n\n"
            "üîß **C√≥mo usar el bot:**\n\n"
            "1Ô∏è‚É£ Inicia el juego, haz una apuesta, ¬°pero no presiones nada!\n"
            "2Ô∏è‚É£ Ve a la mini-aplicaci√≥n del bot y presiona el bot√≥n 'Analisar padr√£o' üîç\n"
            "3Ô∏è‚É£ Recibe la lista de casillas seguras ‚úÖ\n"
            "4Ô∏è‚É£ ¬°Repite los movimientos que sugiere el bot y retira el dinero! üí∞üéØ\n\n"
            "‚ö†Ô∏è **Importante:**\n"
            "No te arriesgues por intuici√≥n. Gana dinero con la cabeza fr√≠a y solo en las casillas verificadas üßäüß†"
        ),
        'open_app_button': "Abrir aplicaci√≥n üì≤",
        'access_denied': "Lo sentimos, pero despu√©s de la verificaci√≥n, se encontraron razones por las que no podemos darte acceso al bot.",
        'access_temp_denied': (
            "üö´ **¬°Vaya! Acceso no concedido**\n"
            "Lamentablemente, la conexi√≥n con el bot fall√≥ üòî\n\n"
            "üìå Por favor, sigue atentamente las recomendaciones de nuestro empleado para que todo salga bien.\n"
            "Esto es lo que dice:\n"
            "üìù _¬´{comment}¬ª_"
        ),
    }
}


# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê –ò –ë–î / INICIALIZA√á√ÉO DO BOT E DO BD ---

bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
# Fun√ß√£o para carregar os dados dos usu√°rios a partir de um arquivo
def load_db():
    if os.path.exists(DB_FILE):
        with open(DB_FILE, 'r', encoding='utf-8') as f:
            try:
                return json.load(f)
            except json.JSONDecodeError:
                return {} # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
    return {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª
# Fun√ß√£o para salvar os dados dos usu√°rios em um arquivo
def save_db(db):
    with open(DB_FILE, 'w', encoding='utf-8') as f:
        json.dump(db, f, indent=4, ensure_ascii=False)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
# Carregamos o banco de dados na inicializa√ß√£o
db = load_db()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ
# Fun√ß√£o para obter o texto no idioma correto
def get_text(key, lang='ru', **kwargs):
    # –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    # Se o idioma n√£o for encontrado, o russo √© usado como padr√£o
    text = TEXTS.get(lang, TEXTS['ru']).get(key, f"_{key}_")
    return text.format(**kwargs)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# Fun√ß√£o para obter os dados de um usu√°rio
def get_user_data(user_id):
    user_id_str = str(user_id)
    if user_id_str not in db:
        db[user_id_str] = {
            'lang': None,
            'state': 'start', # 'start', 'awaiting_id', 'pending_review', 'approved', 'rejected'
            '1win_id': None,
            'status': 'user' # 'user' or 'admin'
        }
    return db[user_id_str]

# --- –ö–õ–ê–í–ò–ê–¢–£–†–´ / TECLADOS ---

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
# Teclado de sele√ß√£o de idioma
def language_keyboard():
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn_pt = types.InlineKeyboardButton("Portugu√™s üáßüá∑", callback_data='lang_pt')
    btn_es = types.InlineKeyboardButton("Espa√±ol üá™üá∏", callback_data='lang_es')
    btn_ru = types.InlineKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data='lang_ru')
    markup.add(btn_pt, btn_es, btn_ru)
    return markup

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
# Teclado universal com bot√£o de suporte
def support_keyboard(lang):
    markup = types.InlineKeyboardMarkup()
    support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
    markup.add(support_btn)
    return markup

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ò–ì–†–û–ö–û–í / HANDLERS PARA JOGADORES ---

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# Handler para o comando /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    # Verificamos se o usu√°rio √© um administrador
    if user_id in ADMIN_IDS:
        handle_admin_panel(message)
        return

    # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    # Para usu√°rios comuns
    user_data = get_user_data(user_id)
    
    # –ï—Å–ª–∏ —è–∑—ã–∫ –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    # Se o idioma ainda n√£o foi escolhido, mostramos a sele√ß√£o
    if not user_data.get('lang'):
        bot.send_message(user_id, get_text('choose_lang'), reply_markup=language_keyboard())
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —Å–∏—Å—Ç–µ–º–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ –Ω—É–∂–Ω—ã–π —à–∞–≥
        # Se o usu√°rio j√° est√° no sistema, o enviamos para a etapa correta
        route_user(message)

# –§—É–Ω–∫—Ü–∏—è-–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# Fun√ß√£o de roteamento para o usu√°rio
def route_user(message):
    user_id = message.chat.id
    user_data = get_user_data(user_id)
    lang = user_data.get('lang', 'ru')
    state = user_data.get('state', 'start')

    if state == 'start':
        markup = types.InlineKeyboardMarkup()
        btn_sync = types.InlineKeyboardButton(text=get_text('sync_button', lang), callback_data='sync_account')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_sync)
        markup.add(support_btn)
        bot.send_message(user_id, get_text('welcome', lang), reply_markup=markup, parse_mode='Markdown')
    
    elif state == 'awaiting_id':
        markup = types.InlineKeyboardMarkup()
        btn_send_id = types.InlineKeyboardButton(text=get_text('send_id_button', lang), callback_data='prompt_for_id')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_send_id)
        markup.add(support_btn)
        bot.send_message(user_id, get_text('instruction_2', lang), reply_markup=markup, parse_mode='Markdown')

    elif state == 'pending_review':
        markup = types.InlineKeyboardMarkup()
        btn_wrong_data = types.InlineKeyboardButton(text=get_text('wrong_data_button', lang), callback_data='change_data')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_wrong_data)
        markup.add(support_btn)
        bot.send_message(user_id, get_text('id_received', lang), reply_markup=markup, parse_mode='Markdown')

    elif state == 'approved':
        markup = types.InlineKeyboardMarkup()
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É –Ω–∞ Web App
        # Criamos um bot√£o de link para o Web App
        web_app = types.WebAppInfo(MINI_APP_URL)
        btn_open_app = types.InlineKeyboardButton(text=get_text('open_app_button', lang), web_app=web_app)
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_open_app)
        markup.add(support_btn)
        bot.send_message(user_id, get_text('access_granted', lang), reply_markup=markup, parse_mode='Markdown')

    elif state == 'rejected':
        bot.send_message(user_id, get_text('access_denied', lang), reply_markup=support_keyboard(lang), parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
# Handler para cliques em bot√µes inline
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    user_id = call.message.chat.id
    user_data = get_user_data(user_id)
    lang = user_data.get('lang', 'ru')
    
    # --- –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–ª–±—ç–∫–∏ ---
    # --- Callbacks de administrador ---
    if user_id in ADMIN_IDS:
        handle_admin_callback(call)
        return

    # --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–ª–±—ç–∫–∏ ---
    # --- Callbacks de usu√°rio ---
    if call.data.startswith('lang_'):
        lang_code = call.data.split('_')[1]
        user_data['lang'] = lang_code
        save_db(db)
        bot.delete_message(user_id, call.message.message_id)
        route_user(call.message) # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–µ—Ä–≤—ã–π —à–∞–≥
        return

    if call.data == 'sync_account':
        # –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        # ALTERADO: Adicionado bot√£o para registro
        markup = types.InlineKeyboardMarkup(row_width=1)
        registration_url = "https://1wuafz.life/?p=gv72"
        
        btn_register = types.InlineKeyboardButton(text=get_text('register_button_text', lang), url=registration_url)
        btn_steps_done = types.InlineKeyboardButton(text=get_text('steps_done_button', lang), callback_data='steps_done')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        
        markup.add(btn_register, btn_steps_done, support_btn)
        
        bot.edit_message_text(chat_id=user_id, message_id=call.message.message_id, text=get_text('instruction_1', lang), reply_markup=markup, parse_mode='Markdown')

    elif call.data == 'steps_done':
        user_data['state'] = 'awaiting_id'
        save_db(db)
        markup = types.InlineKeyboardMarkup()
        btn_send_id = types.InlineKeyboardButton(text=get_text('send_id_button', lang), callback_data='prompt_for_id')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_send_id)
        markup.add(support_btn)
        bot.edit_message_text(chat_id=user_id, message_id=call.message.message_id, text=get_text('instruction_2', lang), reply_markup=markup, parse_mode='Markdown')

    elif call.data == 'prompt_for_id':
        bot.send_message(user_id, get_text('prompt_for_id', lang))
        bot.answer_callback_query(call.id) # –£–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏

    elif call.data == 'change_data':
        user_data['state'] = 'awaiting_id' # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —à–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è ID
        save_db(db)
        bot.send_message(user_id, get_text('change_data_prompt', lang))
        bot.answer_callback_query(call.id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è ID –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ)
# Handler para receber o ID do usu√°rio (texto ou foto)
@bot.message_handler(content_types=['text', 'photo'])
def handle_id_submission(message):
    user_id = message.chat.id
    
    if user_id in ADMIN_IDS:
        handle_admin_messages(message)
        return
        
    user_data = get_user_data(user_id)
    lang = user_data.get('lang', 'ru')
    
    if user_data['state'] == 'awaiting_id':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID. –ï—Å–ª–∏ —Ñ–æ—Ç–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º file_id –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∞–¥–º–∏–Ω—É
        # Salvamos o ID. Se for uma foto, salvamos o file_id para encaminhar ao administrador
        if message.text:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–≤–µ–¥–µ–Ω—ã —Å–ª—É—á–∞–π–Ω–æ
            if message.text.startswith('/'):
                return
            user_data['1win_id'] = message.text
        elif message.photo:
            user_data['1win_id'] = message.photo[-1].file_id

        # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        # Mudamos o status e salvamos
        user_data['state'] = 'pending_review'
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
        # Adicionamos √† fila de verifica√ß√£o
        if 'pending_requests' not in db:
            db['pending_requests'] = []
        if str(user_id) not in db['pending_requests']:
             db['pending_requests'].append(str(user_id))

        save_db(db)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        # Enviamos a confirma√ß√£o
        markup = types.InlineKeyboardMarkup()
        btn_wrong_data = types.InlineKeyboardButton(text=get_text('wrong_data_button', lang), callback_data='change_data')
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', lang), url=SUPPORT_LINK)
        markup.add(btn_wrong_data)
        markup.add(support_btn)
        
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # Se os dados foram alterados, enviamos outra mensagem
        if hasattr(message, 'reply_to_message') and message.reply_to_message and "–∏–∑–º–µ–Ω—é –¥–∞–Ω–Ω—ã–µ" in message.reply_to_message.text.lower():
             bot.send_message(user_id, get_text('data_changed', lang))
        else:
             bot.send_message(user_id, get_text('id_received', lang), reply_markup=markup)


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ê–î–ú–ò–ù–û–í / HANDLERS PARA ADMINISTRADORES ---

# –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
# Painel do administrador
def handle_admin_panel(message):
    user_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton(get_text('incoming_requests_button'))
    btn2 = types.KeyboardButton(get_text('stats_button'))
    btn3 = types.KeyboardButton(get_text('status_button'))
    markup.add(btn1, btn2, btn3)
    bot.send_message(user_id, get_text('admin_panel_title'), reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∞
# Processamento de mensagens de texto do administrador
def handle_admin_messages(message):
    user_id = message.chat.id
    user_data = get_user_data(user_id)
    
    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –æ—Ç–∫–∞–∑–∞
    # Se o administrador est√° enviando um coment√°rio para rejei√ß√£o
    if user_data.get('state') == 'awaiting_rejection_comment':
        target_user_id = user_data.get('target_user_id')
        comment = message.text
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        # Enviamos a mensagem ao usu√°rio
        target_user_data = get_user_data(target_user_id)
        target_lang = target_user_data.get('lang', 'ru')
        bot.send_message(target_user_id, get_text('access_temp_denied', target_lang, comment=comment), reply_markup=support_keyboard(target_lang), parse_mode='Markdown')
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # Atualizamos o status do usu√°rio
        target_user_data['state'] = 'rejected'
        if 'pending_requests' in db and str(target_user_id) in db['pending_requests']:
            db['pending_requests'].remove(str(target_user_id))
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥–º–∏–Ω–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        # Retornamos o administrador ao estado normal
        user_data['state'] = 'admin'
        user_data['target_user_id'] = None
        save_db(db)
        
        bot.send_message(user_id, get_text('request_rejected_with_comment', user_id=target_user_id))
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        # Mostramos a pr√≥xima solicita√ß√£o, se houver
        show_next_request(user_id)
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–∑ ReplyKeyboard
    # Processamento de bot√µes do ReplyKeyboard
    if message.text == get_text('incoming_requests_button'):
        show_next_request(user_id)
    elif message.text == get_text('stats_button'):
        show_stats(user_id)
    elif message.text == get_text('status_button'):
        bot.send_message(user_id, get_text('bot_status_ok'))

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
# Mostrar a pr√≥xima solicita√ß√£o para verifica√ß√£o
def show_next_request(admin_id):
    pending = db.get('pending_requests', [])
    if not pending:
        bot.send_message(admin_id, get_text('no_pending_requests'))
        return
    
    target_user_id_str = pending[0]
    target_user_data = get_user_data(target_user_id_str)
    user_1win_id = target_user_data.get('1win_id', 'N/A')
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
    # Criamos o teclado para as a√ß√µes
    markup = types.InlineKeyboardMarkup()
    btn_accept = types.InlineKeyboardButton(get_text('accept_button'), callback_data=f"admin_accept_{target_user_id_str}")
    btn_reject = types.InlineKeyboardButton(get_text('reject_button'), callback_data=f"admin_reject_{target_user_id_str}")
    btn_reject_comment = types.InlineKeyboardButton(get_text('reject_with_comment_button'), callback_data=f"admin_comment_{target_user_id_str}")
    markup.add(btn_accept, btn_reject)
    markup.add(btn_reject_comment)
    
    # –ï—Å–ª–∏ ID - —ç—Ç–æ file_id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ, –∏–Ω–∞—á–µ —Ç–µ–∫—Å—Ç
    # Se o ID for um file_id de uma foto, enviamos a foto, caso contr√°rio, o texto
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ —Ñ–æ—Ç–æ
        # Tentamos enviar como foto
        bot.send_photo(admin_id, user_1win_id, caption=get_text('request_from_user', user_id=target_user_id_str, user_data=f"–§–æ—Ç–æ ID"), reply_markup=markup)
    except telebot.apihelper.ApiTelegramException:
        # –ï—Å–ª–∏ –Ω–µ —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç
        # Se n√£o for uma foto, enviamos como texto
        bot.send_message(admin_id, get_text('request_from_user', user_id=target_user_id_str, user_data=user_1win_id), reply_markup=markup)

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
# Mostrar estat√≠sticas
def show_stats(admin_id):
    accepted_count = 0
    rejected_count = 0
    for user_id, data in db.items():
        if user_id.isdigit(): # –ò—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –∑–∞–ø–∏—Å–∏
            if data.get('state') == 'approved':
                accepted_count += 1
            elif data.get('state') == 'rejected':
                rejected_count += 1
    
    pending_count = len(db.get('pending_requests', []))
    
    bot.send_message(admin_id, get_text('stats_info', accepted=accepted_count, rejected=rejected_count, pending=pending_count), parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∞
# Processamento de callbacks do administrador
def handle_admin_callback(call):
    admin_id = call.message.chat.id
    try:
        action, target_user_id_str = call.data.split('_', 2)[1:]
    except ValueError:
        bot.answer_callback_query(call.id, "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data")
        return
        
    target_user_id = int(target_user_id_str)
    
    target_user_data = get_user_data(target_user_id)
    target_lang = target_user_data.get('lang', 'ru')
    
    # –£–±–∏—Ä–∞–µ–º –∑–∞—è–≤–∫—É –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    # Removemos a solicita√ß√£o da fila
    if 'pending_requests' in db and target_user_id_str in db['pending_requests']:
        db['pending_requests'].remove(target_user_id_str)
    
    if action == 'accept':
        target_user_data['state'] = 'approved'
        save_db(db)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        # Enviamos a mensagem ao usu√°rio
        markup = types.InlineKeyboardMarkup()
        web_app = types.WebAppInfo(MINI_APP_URL)
        btn_open_app = types.InlineKeyboardButton(text=get_text('open_app_button', target_lang), web_app=web_app)
        support_btn = types.InlineKeyboardButton(text=get_text('support_button', target_lang), url=SUPPORT_LINK)
        markup.add(btn_open_app)
        markup.add(support_btn)
        bot.send_message(target_user_id, get_text('access_granted', target_lang), reply_markup=markup, parse_mode='Markdown')
        
        bot.edit_message_text(chat_id=admin_id, message_id=call.message.message_id, text=get_text('request_accepted', user_id=target_user_id))
        show_next_request(admin_id) # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∑–∞—è–≤–∫—É
        
    elif action == 'reject':
        target_user_data['state'] = 'rejected'
        save_db(db)
        bot.send_message(target_user_id, get_text('access_denied', target_lang), reply_markup=support_keyboard(target_lang))
        bot.edit_message_text(chat_id=admin_id, message_id=call.message.message_id, text=get_text('request_rejected', user_id=target_user_id))
        show_next_request(admin_id)
        
    elif action == 'comment':
        admin_data = get_user_data(admin_id)
        admin_data['state'] = 'awaiting_rejection_comment'
        admin_data['target_user_id'] = target_user_id
        save_db(db)
        
        bot.edit_message_text(chat_id=admin_id, message_id=call.message.message_id, text=get_text('prompt_for_rejection_comment', user_id=target_user_id))
        
    bot.answer_callback_query(call.id)


# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê / INICIAR O BOT ---
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è... / O bot est√° iniciando...")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    # Verificamos o token
    if BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
        print("\n!!! –í–ù–ò–ú–ê–ù–ò–ï !!!")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN –Ω–∞ —Å—Ç—Ä–æ–∫–µ 10.")
        print("\n!!! ATEN√á√ÉO !!!")
        print("Por favor, insira o seu token na vari√°vel BOT_TOKEN na linha 10.")
    else:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. / Bot iniciado.")
        bot.polling(none_stop=True)



